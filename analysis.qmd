---
format: html
editor-options: 
  chunk-output-type: console
---

# Analysis

## Setup

```{r}
#| label: libraries

libs <- function() {
  library(rlang)
  library(tidyverse)
  tprint <- 75 # default tibble print
  options(tibble.print_max = tprint, tibble.print_min = tprint) # show up to tprint rows

  library(fs)

  # tools
  library(vroom)
  library(readxl)
  library(openxlsx2) # for writing xlsx files
  library(lubridate)
  library(RColorBrewer)
  library(RcppRoll)
  library(fredr)
  library(tidycensus)

  # boyd libraries
  library(btools)
  library(bdata)
  library(bggtools)
  library(bmaps)

  # graphics
  library(scales)
  library(ggbeeswarm)
  library(patchwork)
  library(gridExtra)
  library(ggrepel)
  library(ggbreak)

  # tables
  library(formattable)
  library(knitr)
  library(kableExtra)
  library(DT)
  library(gt)
  library(gtExtras)
  library(janitor)
  library(skimr)
  library(vtable)

  # maps
  # library(maps)
  # # https://cran.r-project.org/web/packages/usmap/vignettes/mapping.html
  # library(usmap)

  source(here::here("R", "libraries_ts.R"))
}

libs()
rm(libs)

```

```{r}
#| label: function-seasonplot

splot <- function(pdata, facetvar) {
  # monthly seasonplot with facets
  pdata |>
    mutate(
      year = year(date) |> as.factor(),
      monthf = factor(month.abb[month(date)], levels = month.abb)
    ) |>
    ggplot(aes(monthf, value, colour = year, group = year)) +
    geom_line() +
    geom_point() +
    scale_x_discrete(name = NULL, limits = month.abb) +
    facet_wrap(facets = vars({{ facetvar }}), ncol = 1, scales = "free") +
    theme_bw()
}

```

```{r}
#| label: constants
# E:\data\nys_monthly_tax\data
# monthly_collections.rds

DRES <- here::here("results")
DDTF <- r"(E:\data\nys_monthly_tax\data)"
DQCEW <- r"(E:\data\qcew\nysdol\data)"

x90 <- theme(
  axis.text.x = element_text(angle = -90, vjust = 0, hjust = 0.5)
)

```

## Get QCEW quarterly

```{r}
#| label: get-qcew

qmta1 <- readRDS(fs::path(DQCEW, "qcew_statemta.rds"))
glimpse(qmta1)
count(qmta1, owner)

qmta2 <- qmta1 |>
  filter(as.integer(owner) == 1, naics_level == 2, naics == "00") |>
  mutate(emp = pmean(mnth1emp, mnth2emp, mnth3emp)) |>
  select(date, areatype, area, nyc, emp, totwage)

qmta2 |> filter(areatype == "state") |> ggplot(aes(date, emp)) + geom_line()

# collapse to state, mta, nyc, suburbs file
qsuburbs <- qmta2 |>
  filter(areatype == "county", !nyc) |>
  summarise(
    n = n(),
    emp = sum(emp),
    totwage = sum(totwage),
    .by = c(date, areatype, nyc)
  ) |>
  mutate(area = "suburbs")

qnyc <- qmta2 |>
  filter(areatype == "county", nyc) |>
  summarise(
    n = n(),
    emp = sum(emp),
    totwage = sum(totwage),
    .by = c(date, areatype, nyc)
  ) |>
  mutate(area = "nyc")

qmtatot <- qmta2 |>
  filter(areatype == "county") |>
  summarise(
    n = n(),
    emp = sum(emp),
    totwage = sum(totwage),
    .by = c(date, areatype)
  ) |>
  mutate(area = "mta")

qnys <- qmta2 |>
  filter(areatype == "state") |>
  summarise(
    n = n(),
    emp = sum(emp),
    totwage = sum(totwage),
    .by = c(date, areatype)
  ) |>
  mutate(area = "nys")

qmta <- bind_rows(
  qnys,
  qmtatot,
  qnyc,
  qsuburbs
) |>
  select(date, area, emp, totwage) |>
  mutate(avgwage = totwage / emp) |>
  arrange(area, date)

glimpse(qmta)
count(qmta, area)
summary(qmta)

f <- function(var) {
  qmta |>
    # select(date, area, value = all_of(var)) |>
    ggplot(aes(date, .data[[var]], colour = area)) +
    geom_line() +
    geom_point()
}
# f("totwage")
# f("emp")
# f("avgwage")

```

## Get tax data

Note that units are DOLLARS (not thousands).

I think the nese tax was included in the state PIT for a while?? go back and check

```{r}
#| label: get-data

df <- readRDS(fs::path(DDTF, "monthly_collections.rds"))
glimpse(df)

count(df |> filter(vtype == "local"), vname, tax)

# df |>
#   filter(vname == "local_congestion") |>
#   ggplot(aes(date, value)) +
#   geom_line() +
#   scale_x_date(breaks = "1 year")

first_data_date <- "2009-10-01"
pmt1 <- df |>
  filter(str_detect(vname, "pmt"), date >= first_data_date) |>
  mutate(vname = str_remove(vname, "local_")) |>
  select(date, vname, tax, value)
glimpse(pmt1)
count(pmt1, vname, tax)

pmt2 <- pmt1 |>
  select(-tax) |>
  pivot_wider(names_from = vname, values_fill = 0) |>
  mutate(pmttot = pmtwage + pmtnesenet) |>
  select(
    date,
    pmttot,
    pmtwage,
    pmtnesenet,
    pmtnesegross,
    pmtneseref,
    pmtscoffset
  )

pmt2

pmt <- pmt2 # our preferred name

pmtlong <- pmt |>
  select(date, pmtwage, pmtnesenet, pmttot) |>
  pivot_longer(-date, names_to = "vname")

pmt |> tail(12)

```

Construct state pit approximating the NESE gross concept:

PIT estimated + final

```{r}
#| label: state-pit

count(df |> filter(vtype == "pit"), vname, tax)

nys <- df |>
  filter(vname %in% c("pit_wh", "pit_et", "pit_fr", "pit_ref")) |>
  filter(year(date) >= 2019) |>
  select(date, vname, value) |>
  pivot_wider(names_from = vname) |>
  mutate(pitetfr = pit_et + pit_fr)
nys

pmt |>
  ggplot(aes(date, pmtscoffset)) +
  geom_line() +
  geom_point()


```

```{r}
#| label: show-tax
#| output: true

# pmtlong |>
#   ggplot(aes(date, value)) +
#   geom_line() +
#   facet_wrap(~vname, scales = "free")

pmtlong |>
  filter(vname == "pmtwage") |>
  filter(year(date) >= 2019) |>
  mutate(date = yearmonth(date)) |>
  as_tsibble(index = date) |>
  feasts::gg_season(value) +
  geom_line(linewidth = 1) +
  geom_point(size = 2) +
  scale_y_continuous(
    name = "$ millions",
    labels = label_comma(scale = 1e-3, accuracy = 1)
  ) +
  labs(x = "") +
  ggtitle("PMT wage tax revenue") +
  theme_bw() +
  x90

pmtlong |>
  filter(vname == "pmtnesenet") |>
  filter(year(date) >= 2019) |>
  mutate(date = yearmonth(date)) |>
  as_tsibble(index = date) |>
  feasts::gg_season(value) +
  geom_line(linewidth = 1) +
  geom_point(size = 2) +
  scale_y_continuous(
    name = "$ millions",
    labels = label_comma(scale = 1e-3, accuracy = 1)
  ) +
  labs(x = "") +
  ggtitle("PMT NESE payments") +
  theme_bw() +
  x90

```

## Write raw data

```{r}
#| label: write-data

area_order <- c("nys", "mta", "nyc", "suburbs")
wage_sheet <- qmta |>
  select(date, area, totwage) |>
  mutate(area = factor(area, levels = area_order)) |>
  arrange(area, date) |>
  mutate(
    totwage = totwage / 1e6,
    pchya = totwage / lag(totwage, 4) - 1,
    .by = c(area)
  ) |>
  pivot_wider(names_from = area, values_from = c(pchya, totwage)) |>
  select(date, starts_with("totwage"), starts_with("pchya"))

pmt

pmt_monthly_sheet <- pmt |>
  arrange(date) |>
  mutate(
    across(
      -date, # every column except date
      \(x) x / lag(x, 12) - 1, # year-ago % change
      .names = "{.col}_pchya" # add “_pchya” suffix
    )
  )

pmt_quarterly_sheet <- pmt |>
  filter(date < "2025-04-01") |>
  arrange(date) |>
  mutate(date = fdoq(date)) |>
  summarise(across(everything(), sum), .by = date) |>
  mutate(
    across(
      -date, # every column except date
      \(x) x / lag(x, 4) - 1, # year-ago % change
      .names = "{.col}_pchya" # add “_pchya” suffix
    )
  )


wb <- wb_workbook() |>
  wb_add_worksheet(sheet = "data_qcew") |>
  wb_add_data(x = qmta) |>
  wb_add_worksheet(sheet = "data_wages") |>
  wb_add_data(x = wage_sheet) |>
  wb_add_worksheet(sheet = "data_pmt_monthly") |>
  wb_add_data(x = pmt_monthly_sheet) |>
  wb_add_worksheet(sheet = "data_pmt_quarterly") |>
  wb_add_data(x = pmt_quarterly_sheet) |>
  wb_set_order(c(
    "data_qcew",
    "data_wages",
    "data_pmt_monthly",
    "data_pmt_quarterly"
  ))

fname <- "pmt_forecast_analysis_base_2025-05.xlsx"
xpath <- here::here("results", fname)

wb |>
  wb_save(file = xpath)

glimpse(qmta)
```

## MTA NESE tax compared to state estimated tax and final returns

What is going on with MTA October NESE collections in 2022, 2023, 2024???

NESE is on the same payment schedule as state PIT estimated payments: Apr, Jun, Sep, and Jan. So why is the MTA 2022, 2023, and 2024 bump in Oct not Sep? Given that it starts in 2022, it probably (?) is not related to the 2023 tax increase. Therefore it might not be something we should think of as related to prior years -- it could be current money.

```{r}
#| label: nesenet-vs-state

pdata <- bind_rows(
  pmt2 |>
    filter(year(date) >= 2019) |>
    select(date, value = pmtnesenet) |>
    mutate(type = "mta"),
  nys |>
    filter(year(date) >= 2019) |>
    select(date, value = pitetfr) |> # pit_et or pitetfr
    mutate(type = "nys")
)

p <- pdata |>
  filter(year(date) >= 2019) |>
  mutate(
    year = year(date) |> as.factor(),
    monthf = factor(month.abb[month(date)], levels = month.abb)
  ) |>
  ggplot(aes(monthf, value, colour = year, group = year)) +
  geom_line() +
  geom_point() +
  scale_x_discrete(name = NULL, limits = month.abb) +
  scale_y_continuous(
    name = "Collections, $ millions",
    labels = scales::label_comma(scale = 1e-6)
  ) +
  facet_wrap(facets = ~type, ncol = 1, scales = "free") +
  theme_bw() +
  ggtitle(
    label = "MTA Net earnings from self-employment (NESE) tax compared to NYS PIT estimated tax + final returns"
  )
p

ggsave(filename = fs::path(DRES, "nesenet_vs_nys.png"), plot = p, width = 10)

```

```{r}
#| label: nesegross-vs-state

pdata <- bind_rows(
  pmt2 |>
    filter(year(date) >= 2019) |>
    select(date, value = pmtnesegross) |>
    mutate(type = "mta"),
  nys |>
    filter(year(date) >= 2019) |>
    select(date, value = pitetfr) |> # pit_et or pitetfr
    mutate(type = "nys")
)

p <- pdata |>
  filter(year(date) >= 2019) |>
  mutate(
    year = year(date) |> as.factor(),
    monthf = factor(month.abb[month(date)], levels = month.abb)
  ) |>
  ggplot(aes(monthf, value, colour = year, group = year)) +
  geom_line() +
  geom_point() +
  scale_x_discrete(name = NULL, limits = month.abb) +
  scale_y_continuous(
    name = "Collections, $ millions",
    labels = scales::label_comma(scale = 1e-6)
  ) +
  facet_wrap(facets = ~type, ncol = 1, scales = "free") +
  theme_bw() +
  ggtitle(
    label = "MTA Net earnings from self-employment (NESE) tax GROSS compared to NYS PIT estimated tax + final returns"
  )
p

ggsave(filename = fs::path(DRES, "nesegross_vs_nys.png"), plot = p, width = 10)

```

```{r}
#| label: nese-only

pdata <- pmt2 |>
  filter(year(date) >= 2022) |>
  select(date, pmtnesenet, pmtnesegross) |>
  pivot_longer(-date)

p <- pdata |>
  ggplot(aes(date, value, colour = name)) +
  geom_line() +
  geom_point() +
  scale_x_date(
    name = NULL,
    breaks = "3 months",
    labels = scales::label_date(format = "%Y-%b")
  ) +
  scale_y_continuous(
    name = "Collections, $ millions",
    labels = scales::label_comma(scale = 1e-6)
  ) +
  x90 +
  theme_bw() +
  ggtitle(
    label = "MTA Net earnings from self-employment (NESE) tax"
  )
p


pdata <- pmt2 |>
  filter(year(date) >= 2022) |>
  select(date, pmtscoffset) |>
  pivot_longer(-date)

p <- pdata |>
  ggplot(aes(date, value, colour = name)) +
  geom_line() +
  geom_point() +
  scale_x_date(
    name = NULL,
    breaks = "3 months",
    labels = scales::label_date(format = "%Y-%b")
  ) +
  scale_y_continuous(
    name = "Collections, $ millions",
    labels = scales::label_comma(scale = 1e-6)
  ) +
  x90 +
  theme_bw() +
  ggtitle(
    label = "MTA Net earnings from self-employment (NESE) tax"
  )
p

# ggsave(filename = fs::path(DRES, "nese_vs_nys.png"), plot = p, width = 10)
```

## MTA wage tax compared to state withholding tax

```{r}
#| label: wagetax-vs-state

pdata <- bind_rows(
  pmt2 |>
    filter(year(date) >= 2019) |>
    select(date, value = pmtwage) |>
    mutate(type = "mta"),
  nys |>
    filter(year(date) >= 2019) |>
    select(date, value = pit_wh) |>
    mutate(type = "nys")
)

p <- pdata |>
  filter(year(date) >= 2019) |>
  mutate(
    year = year(date) |> as.factor(),
    monthf = factor(month.abb[month(date)], levels = month.abb)
  ) |>
  ggplot(aes(monthf, value, colour = year, group = year)) +
  geom_line() +
  geom_point() +
  scale_x_discrete(name = NULL, limits = month.abb) +
  scale_y_continuous(
    name = "Collections, $ millions",
    labels = scales::label_comma(scale = 1e-6)
  ) +
  facet_wrap(facets = ~type, ncol = 1, scales = "free") +
  theme_bw() +
  ggtitle(
    label = "MTA PMT wage tax compared to NYS PIT withholding"
  )
p

ggsave(filename = fs::path(DRES, "wagetax_vs_nys.png"), plot = p, width = 10)

p <- pdata |>
  arrange(type, date) |>
  mutate(pch = value / lag(value, 12) - 1, .by = type) |>
  filter(year(date) >= 2024) |>
  ggplot(aes(date, pch, colour = type)) +
  geom_line() +
  geom_point() +
  geom_hline(yintercept = 0) +
  scale_x_date(
    name = NULL,
    breaks = "3 months",
    labels = scales::label_date(format = "%Y-%b")
  ) +
  scale_y_continuous(
    breaks = seq(-.1, 1, .05),
    labels = scales::label_percent(accuracy = 1)
  ) +
  ggtitle(
    label = "MTA wage tax and NYS withholding tax",
    subtitle = "% growth year over year"
  ) +
  theme_bw()
p

ggsave(
  filename = fs::path(DRES, "wagetax_pch_vs_nys.png"),
  plot = p,
  width = 10
)

```

## The net self-employment earnings tax

```{r}
nese <- pmt2 |>
  select(-pmtwage, -pmttot) |>
  mutate(
    nesenetcalc = pmtnesegross + pmtscoffset - pmtneseref,
    diff = nesenetcalc - pmtnesenet
  )
```

```{r}
#| label: nese-table
#| output: true

tabdata <- nese |>
  select(date, pmtnesenet) |>
  mutate(year = year(date)) |>
  summarise(nese = sum(pmtnesenet), .by = year) |>
  arrange(year) |>
  mutate(pch = nese / lag(nese) - 1) |>
  filter(year %in% 2016:2024)

tabdata |>
  gt() |>
  tab_header(
    "MTA net earnings from self-employment tax collections",
    subtitle = "Amounts in $ millions"
  ) |>
  fmt_number(columns = nese, scale = 1e-6) |>
  fmt_percent(columns = pch, decimals = 1)

```

```{r}
#| label: nese-collection-components

pdata <- nese |>
  filter(year(date) %in% 2019:2025) |>
  select(-nesenetcalc, -diff) |>
  mutate(year = year(date), pmtneseref = -pmtneseref) |>
  pivot_longer(cols = -c(year, date)) |>
  mutate(
    name = str_remove(name, "pmtnese"),
    name = factor(
      name,
      levels = c("net", "gross", "ref", "pmtscoffset"),
      labels = c("total", "gross", "refunds", "state/city offset")
    )
  ) |>
  arrange(date, name)

basesize <- .85
basetype <- "solid"
p <- pdata |>
  filter(year(date) %in% 2019:2024) |>
  ggplot(aes(date, value, colour = name, size = name, linetype = name)) +
  geom_line() +
  geom_point(size = 1.25) +
  geom_hline(yintercept = 0) +
  scale_colour_manual(
    values = c(
      "total" = "blue",
      "gross" = "green",
      "refunds" = "red",
      "state/city offset" = "black"
    )
  ) +
  scale_size_manual(
    values = c(
      "total" = 1.9,
      "gross" = basesize,
      "refunds" = basesize,
      "state/city offset" = basesize
    )
  ) +
  scale_linetype_manual(
    values = c(
      "total" = basetype,
      "gross" = basetype,
      "refunds" = basetype,
      "state/city offset" = "dashed"
    )
  ) +
  scale_y_continuous(
    name = "$ millions",
    labels = scales::label_number(scale = 1e-6)
  ) +
  labs(x = NULL) +
  ggtitle("MTA Net self-employment tax components by year") +
  theme_bw() +
  facet_wrap(~year, ncol = 2, scales = "free_x")

ggsave(
  filename = fs::path(DRES, "nese_components.png"),
  plot = p,
  width = 10
)

```

## Examine state-city offsets

```{r}
#| label: examine-offsets
#| output: true

first_data_date <- "2009-10-01"
scoff <- df |>
  filter(str_detect(vname, "scoff"), date >= first_data_date) |>
  mutate(vname = str_remove(vname, "local_")) |>
  select(date, vname, tax, value)
# glimpse(scoff)
# count(scoff, vname)

# scoff |>
#   ggplot(aes(date, value)) +
#   geom_line() +
#   facet_wrap(~vname, ncol = 1, scales = "free")

pdata <- scoff |>
  filter(vname %in% c("nycscoffset", "pmtscoffset"), year(date) >= 2019)

p <- splot(pdata, vname) +
  scale_y_continuous(
    name = "$ millions",
    labels = scales::label_number(scale = 1e-6)
  ) +
  ggtitle("NYC and MTA 'state/city offsets' by month, recent years")

ggsave(
  filename = fs::path(DRES, "state_city_offsets.png"),
  plot = p,
  width = 10
)

```